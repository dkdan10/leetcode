const quicksort = (arr, low = 0, high = arr.length - 1) => {
    if (low >= high) return
    pi = partition(arr, low, high)
    quicksort(arr, low, pi - 1)
    quicksort(arr, pi + 1, high)
}

const partition = (arr, low, high) => {
    let i = low - 1
    const pivot = arr[high]

    for (let j = low; j <= high; j++) {
        if (arr[j] < pivot) {
            i++
            [arr[j], arr[i]] = [arr[i], arr[j]]
        }
    }
    [arr[i + 1], arr[high]] = [arr[high], arr[i+1]]

    return i + 1
}

arr = [3, 2, 5, 1, 2, 3, 65465, 4564, 345, 234, 213]
console.log(quicksort(arr))
console.log(arr)

// My hor ver
[[0, 0, 0, 0, 0], 
[110, 0, 0, 0, 0], 
[210, 0, 0, 0, 114], 
[310, 0, 0, 113, 214], 
[410, 0, 0, 213, 314], 
[610, 211, 112, 313, 414], 
[710, 311, 412, 613, 614], 
[810, 411, 1, 713, 714], 
[1, 4, 2, 1, 1], 
[4, 1, 4, 4, 1014]]

// SOL
[[0, 0, 0, 0, 0], 
[0, 0, 0, 0, 0], 
[0, 0, 0, 0, 0], 
[110, 0, 0, 0, 114], 
[210, 0, 0, 0, 214], 
[310, 0, 0, 113, 314], 
[410, 0, 0, 213, 414], 
[610, 211, 112, 313, 614], 
[710, 311, 412, 613, 714], 
[810, 411, 512, 713, 1014]]

// My Both
[[0, 0, 0, 0, 0], 
[110, 0, 0, 0, 0], 
[210, 0, 0, 0, 114], 
[310, 0, 0, 113, 214], 
[410, 0, 0, 213, 314], 
[5, 211, 112, 313, 414], 
[610, 311, 412, 613, 614], 
[710, 411, 1, 713, 714], 
[810, 4, 2, 1, 1], 
[4, 1, 4, 4, 1014]]

